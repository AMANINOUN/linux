#include <stdio.h>
#include <stdlib.h>
#include <sys/socket.h> 
#include <arpa/inet.h>  
#include <string.h>     
#include <sys/types.h>

#define MAXPENDING 4    /* Maximum outstanding connection requests */

void Error(char *errorMessage)
{
    perror(errorMessage);
    exit(1);
}


int CreateTCPServerSocket(int port)
{
    int sock;                        /* socket to create */
    struct sockaddr_in echoServAddr; /* Local address */

    /* Create socket for incoming connections */
    if ((sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) < 0)
    Error("Echec socket");

    /* Construct local address structure */
    memset(&echoServAddr, 0, sizeof(echoServAddr));   /* Zero out structure */
    echoServAddr.sin_family = AF_INET;                /* Internet address family */
    echoServAddr.sin_addr.s_addr = htonl(INADDR_ANY); /* Any incoming interface */
    echoServAddr.sin_port = htons(port);              /* Local port */

    /* Bind to the local address */
    if (bind(sock, (struct sockaddr *) &echoServAddr, sizeof(echoServAddr)) < 0)
    Error("Echec bind");

    /* Mark the socket so it will listen for incoming connections */
    if (listen(sock, MAXPENDING) < 0)
    Error("Echec listen");
    return sock;
}

main()
{
    int intNumeroPort;
    printf("Entrer un numero de port pour lancer la fenetre de reception de message :");
    scanf("%i",&intNumeroPort);

    int sock;
    sock = CreateTCPServerSocket(intNumeroPort);

    int nsock,lgCltAddr,pID,n;
    struct sockaddr_in echoCltAddr;
        
    lgCltAddr=sizeof(echoCltAddr);

    while (1) {

        nsock=accept(sock,(struct sockaddr *)&echoCltAddr,&lgCltAddr);

        pID=fork();

        if(pID==0){

            close(sock);

            /*2-Reception du message courant*/
            char strMessage[256];
	    n=recv(nsock,strMessage,sizeof(strMessage),0);
            if (n<0) {
                      printf("Echec en lecture");
                      close(nsock);
                      exit(0);
                     }
            strMessage[n]='\0';
                       
            printf("\n%s\n,",strTitreMatch);            
	  
            close(nsock);
            exit(0);
                 

        }

    }
}

